{"ast":null,"code":"var _jsxFileName = \"C:\\\\Users\\\\Zbook\\\\Downloads\\\\Compressed\\\\todo_react_app-master\\\\todo_react_app-master\\\\src\\\\App.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport { Button, Container, Text, Title, Modal, TextInput, Group, Card, ActionIcon } from '@mantine/core';\nimport { MoonStars, Sun, Trash, Edit } from 'tabler-icons-react';\nimport { MantineProvider, ColorSchemeProvider } from '@mantine/core';\nimport { useColorScheme } from '@mantine/hooks';\nimport { useHotkeys, useLocalStorage } from '@mantine/hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function App() {\n  _s();\n\n  const [tasks, setTasks] = useState([]);\n  const [opened, setOpened] = useState(false);\n  const [editingTask, setEditingTask] = useState(null); // State to track the task being edited\n\n  const [currentTaskId, setCurrentTaskId] = useState(null); // State to track the task being edited\n\n  const preferredColorScheme = useColorScheme();\n  const [colorScheme, setColorScheme] = useLocalStorage({\n    key: 'mantine-color-scheme',\n    defaultValue: 'light',\n    getInitialValueInEffect: true\n  });\n\n  const toggleColorScheme = value => setColorScheme(value || (colorScheme === 'dark' ? 'light' : 'dark'));\n\n  useHotkeys([['mod+J', () => toggleColorScheme()]]);\n  const taskTitle = useRef('');\n  const taskSummary = useRef('');\n\n  function createTask() {\n    // Créez un objet de tâche à envoyer à l'API Gateway\n    const newTask = {\n      title: taskTitle.current.value,\n      summary: taskSummary.current.value\n    }; // Faites une requête POST à votre API Gateway pour créer une nouvelle tâche\n\n    axios.post('https://rdc83wu5s2.execute-api.us-east-1.amazonaws.com/tasks/', newTask).then(response => {\n      // Mettez à jour l'état des tâches avec la nouvelle tâche créée par l'API\n      setTasks([...tasks, response.data.item]); // Fermez la fenêtre modale une fois la tâche créée\n\n      setOpened(false);\n    }).catch(error => {\n      console.error(error); // Gérez les erreurs de requête ici\n    });\n  }\n\n  function deleteTask(index) {\n    const clonedTasks = [...tasks];\n    clonedTasks.splice(index, 1);\n    setTasks(clonedTasks);\n    saveTasks(clonedTasks);\n  }\n\n  function loadTasks() {\n    const loadedTasks = localStorage.getItem('tasks');\n    const parsedTasks = JSON.parse(loadedTasks);\n\n    if (parsedTasks) {\n      setTasks(parsedTasks);\n    }\n  }\n\n  function saveTasks(tasks) {\n    localStorage.setItem('tasks', JSON.stringify(tasks));\n  }\n\n  useEffect(() => {\n    loadTasks();\n  }, []);\n\n  function updateTask() {\n    const updatedTasks = tasks.map((task, index) => {\n      if (index === editingTask) {\n        return { ...task,\n          title: taskTitle.current.value,\n          summary: taskSummary.current.value\n        };\n      }\n\n      return task;\n    });\n    setTasks(updatedTasks);\n    setEditingTask(null);\n    setCurrentTaskId(null);\n    saveTasks(updatedTasks);\n  }\n\n  function handleEditTask(index) {\n    setOpened(true);\n    setEditingTask(index);\n    setCurrentTaskId(tasks[index].id);\n    taskTitle.current.value = tasks[index].title;\n    taskSummary.current.value = tasks[index].summary;\n  }\n\n  return /*#__PURE__*/_jsxDEV(ColorSchemeProvider, {\n    colorScheme: colorScheme,\n    toggleColorScheme: toggleColorScheme,\n    children: /*#__PURE__*/_jsxDEV(MantineProvider, {\n      theme: {\n        colorScheme,\n        defaultRadius: 'md'\n      },\n      withGlobalStyles: true,\n      withNormalizeCSS: true,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: \"App\",\n        children: [/*#__PURE__*/_jsxDEV(Modal, {\n          opened: opened,\n          size: 'md',\n          title: editingTask !== null ? 'Edit Task' : 'New Task',\n          withCloseButton: false,\n          onClose: () => {\n            setOpened(false);\n            setEditingTask(null);\n            setCurrentTaskId(null);\n          },\n          centered: true,\n          children: [/*#__PURE__*/_jsxDEV(TextInput, {\n            mt: 'md',\n            ref: taskTitle,\n            placeholder: 'Task Title',\n            required: true,\n            label: 'Title',\n            defaultValue: editingTask !== null ? tasks[editingTask].title : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TextInput, {\n            ref: taskSummary,\n            mt: 'md',\n            placeholder: 'Task Summary',\n            label: 'Summary',\n            defaultValue: editingTask !== null ? tasks[editingTask].summary : ''\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Group, {\n            mt: 'md',\n            position: 'apart',\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                setOpened(false);\n                setEditingTask(null);\n                setCurrentTaskId(null);\n              },\n              variant: 'subtle',\n              children: \"Cancel\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: () => {\n                if (editingTask !== null) {\n                  updateTask();\n                } else {\n                  createTask();\n                }\n\n                setOpened(false);\n              },\n              children: editingTask !== null ? 'Save Changes' : 'Create Task'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 17\n        }, this), /*#__PURE__*/_jsxDEV(Container, {\n          size: 550,\n          my: 40,\n          children: [/*#__PURE__*/_jsxDEV(Group, {\n            position: 'apart',\n            children: [/*#__PURE__*/_jsxDEV(Title, {\n              sx: theme => ({\n                fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                fontWeight: 900\n              }),\n              children: \"My Tasks\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(ActionIcon, {\n              color: 'blue',\n              onClick: () => toggleColorScheme(),\n              size: \"lg\",\n              children: colorScheme === 'dark' ? /*#__PURE__*/_jsxDEV(Sun, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 184,\n                columnNumber: 37\n              }, this) : /*#__PURE__*/_jsxDEV(MoonStars, {\n                size: 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 37\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 25\n          }, this), tasks.length > 0 ? tasks.map((task, index) => {\n            if (task.title) {\n              return /*#__PURE__*/_jsxDEV(Card, {\n                withBorder: true,\n                children: [\" \", /*#__PURE__*/_jsxDEV(Group, {\n                  position: 'apart',\n                  children: [/*#__PURE__*/_jsxDEV(Text, {\n                    weight: 'bold',\n                    children: task.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 33\n                  }, this), /*#__PURE__*/_jsxDEV(Group, {\n                    children: [/*#__PURE__*/_jsxDEV(Button, {\n                      variant: \"outline\",\n                      onClick: () => handleEditTask(index),\n                      leftIcon: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 201,\n                        columnNumber: 51\n                      }, this),\n                      children: \"Edit\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 37\n                    }, this), /*#__PURE__*/_jsxDEV(ActionIcon, {\n                      onClick: () => {\n                        deleteTask(index);\n                      },\n                      color: 'red',\n                      variant: 'transparent',\n                      children: /*#__PURE__*/_jsxDEV(Trash, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 212,\n                        columnNumber: 41\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 205,\n                      columnNumber: 37\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 33\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 29\n                }, this), /*#__PURE__*/_jsxDEV(Text, {\n                  color: 'dimmed',\n                  size: 'md',\n                  mt: 'sm',\n                  children: task.summary ? task.summary : 'No summary was provided for this task'\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 29\n                }, this)]\n              }, task.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 25\n              }, this);\n            }\n          }) : /*#__PURE__*/_jsxDEV(Text, {\n            size: 'lg',\n            mt: 'md',\n            color: 'dimmed',\n            children: \"You have no tasks\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 224,\n            columnNumber: 29\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            onClick: () => {\n              setOpened(true);\n            },\n            fullWidth: true,\n            mt: 'md',\n            children: \"New Task\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 228,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 13\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 113,\n    columnNumber: 9\n  }, this);\n}\n\n_s(App, \"QM8awb3mYFnnldyiZrKC0zCSGr0=\", false, function () {\n  return [useColorScheme, useLocalStorage, useHotkeys];\n});\n\n_c = App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","useRef","useEffect","axios","Button","Container","Text","Title","Modal","TextInput","Group","Card","ActionIcon","MoonStars","Sun","Trash","Edit","MantineProvider","ColorSchemeProvider","useColorScheme","useHotkeys","useLocalStorage","App","tasks","setTasks","opened","setOpened","editingTask","setEditingTask","currentTaskId","setCurrentTaskId","preferredColorScheme","colorScheme","setColorScheme","key","defaultValue","getInitialValueInEffect","toggleColorScheme","value","taskTitle","taskSummary","createTask","newTask","title","current","summary","post","then","response","data","item","catch","error","console","deleteTask","index","clonedTasks","splice","saveTasks","loadTasks","loadedTasks","localStorage","getItem","parsedTasks","JSON","parse","setItem","stringify","updateTask","updatedTasks","map","task","handleEditTask","id","defaultRadius","theme","fontFamily","fontWeight","length"],"sources":["C:/Users/Zbook/Downloads/Compressed/todo_react_app-master/todo_react_app-master/src/App.js"],"sourcesContent":["import React, { useState, useRef, useEffect } from 'react';\nimport axios from 'axios';\nimport {\n    Button,\n    Container,\n    Text,\n    Title,\n    Modal,\n    TextInput,\n    Group,\n    Card,\n    ActionIcon,\n} from '@mantine/core';\nimport { MoonStars, Sun, Trash, Edit } from 'tabler-icons-react';\n\nimport {\n    MantineProvider,\n    ColorSchemeProvider,\n} from '@mantine/core';\nimport { useColorScheme } from '@mantine/hooks';\nimport { useHotkeys, useLocalStorage } from '@mantine/hooks';\n\nexport default function App() {\n    const [tasks, setTasks] = useState([]);\n    const [opened, setOpened] = useState(false);\n    const [editingTask, setEditingTask] = useState(null); // State to track the task being edited\n    const [currentTaskId, setCurrentTaskId] = useState(null);// State to track the task being edited\n\n    const preferredColorScheme = useColorScheme();\n    const [colorScheme, setColorScheme] = useLocalStorage({\n        key: 'mantine-color-scheme',\n        defaultValue: 'light',\n        getInitialValueInEffect: true,\n    });\n    const toggleColorScheme = value =>\n        setColorScheme(value || (colorScheme === 'dark' ? 'light' : 'dark'));\n\n    useHotkeys([['mod+J', () => toggleColorScheme()]]);\n\n    const taskTitle = useRef('');\n    const taskSummary = useRef('');\n\n    function createTask() {\n        // Créez un objet de tâche à envoyer à l'API Gateway\n        const newTask = {\n            title: taskTitle.current.value,\n            summary: taskSummary.current.value,\n        };\n\n        // Faites une requête POST à votre API Gateway pour créer une nouvelle tâche\n        axios.post('https://rdc83wu5s2.execute-api.us-east-1.amazonaws.com/tasks/', newTask)\n            .then(response => {\n                // Mettez à jour l'état des tâches avec la nouvelle tâche créée par l'API\n                setTasks([...tasks, response.data.item]);\n\n                // Fermez la fenêtre modale une fois la tâche créée\n                setOpened(false);\n            })\n            .catch(error => {\n                console.error(error);\n                // Gérez les erreurs de requête ici\n            });\n    }\n\n    function deleteTask(index) {\n        const clonedTasks = [...tasks];\n        clonedTasks.splice(index, 1);\n        setTasks(clonedTasks);\n        saveTasks(clonedTasks);\n    }\n\n    function loadTasks() {\n        const loadedTasks = localStorage.getItem('tasks');\n        const parsedTasks = JSON.parse(loadedTasks);\n        if (parsedTasks) {\n            setTasks(parsedTasks);\n        }\n    }\n\n    function saveTasks(tasks) {\n        localStorage.setItem('tasks', JSON.stringify(tasks));\n    }\n\n    useEffect(() => {\n        loadTasks();\n    }, []);\n    function updateTask() {\n        const updatedTasks = tasks.map((task, index) => {\n            if (index === editingTask) {\n                return {\n                    ...task,\n                    title: taskTitle.current.value,\n                    summary: taskSummary.current.value,\n                };\n            }\n            return task;\n        });\n\n        setTasks(updatedTasks);\n        setEditingTask(null);\n        setCurrentTaskId(null);\n        saveTasks(updatedTasks);\n    }\n\n    function handleEditTask(index) {\n        setOpened(true);\n        setEditingTask(index);\n        setCurrentTaskId(tasks[index].id);\n        taskTitle.current.value = tasks[index].title;\n        taskSummary.current.value = tasks[index].summary;\n    }\n    return (\n        <ColorSchemeProvider\n            colorScheme={colorScheme}\n            toggleColorScheme={toggleColorScheme}>\n            <MantineProvider\n                theme={{ colorScheme, defaultRadius: 'md' }}\n                withGlobalStyles\n                withNormalizeCSS>\n                <div className='App'>\n                <Modal\n            opened={opened}\n            size={'md'}\n            title={editingTask !== null ? 'Edit Task' : 'New Task'}\n            withCloseButton={false}\n            onClose={() => {\n                setOpened(false);\n                setEditingTask(null);\n                setCurrentTaskId(null);\n            }}\n            centered>\n            <TextInput\n                mt={'md'}\n                ref={taskTitle}\n                placeholder={'Task Title'}\n                required\n                label={'Title'}\n                defaultValue={editingTask !== null ? tasks[editingTask].title : ''}\n            />\n            <TextInput\n                ref={taskSummary}\n                mt={'md'}\n                placeholder={'Task Summary'}\n                label={'Summary'}\n                defaultValue={editingTask !== null ? tasks[editingTask].summary : ''}\n            />\n            <Group mt={'md'} position={'apart'}>\n                <Button\n                    onClick={() => {\n                        setOpened(false);\n                        setEditingTask(null);\n                        setCurrentTaskId(null);\n                    }}\n                    variant={'subtle'}>\n                    Cancel\n                </Button>\n                <Button\n                    onClick={() => {\n                        if (editingTask !== null) {\n                            updateTask();\n                        } else {\n                            createTask();\n                        }\n                        setOpened(false);\n                    }}>\n                    {editingTask !== null ? 'Save Changes' : 'Create Task'}\n                </Button>\n            </Group>\n        </Modal>\n                    <Container size={550} my={40}>\n                        <Group position={'apart'}>\n                            <Title\n                                sx={theme => ({\n                                    fontFamily: `Greycliff CF, ${theme.fontFamily}`,\n                                    fontWeight: 900,\n                                })}>\n                                My Tasks\n                            </Title>\n                            <ActionIcon\n                                color={'blue'}\n                                onClick={() => toggleColorScheme()}\n                                size='lg'>\n                                {colorScheme === 'dark' ? (\n                                    <Sun size={16} />\n                                ) : (\n                                    <MoonStars size={16} />\n                                )}\n                            </ActionIcon>\n                        </Group>\n                        {tasks.length > 0 ? (\n            tasks.map((task, index) => {\n                if (task.title) {\n                    return (\n                        <Card withBorder key={task.id}> {/* Assurez-vous d'utiliser un ID unique pour chaque tâche */}\n                            <Group position={'apart'}>\n                                <Text weight={'bold'}>{task.title}</Text>\n                                <Group>\n                                    <Button\n                                        variant=\"outline\"\n                                        onClick={() => handleEditTask(index)}\n                                        leftIcon={<Edit />}\n                                    >\n                                        Edit\n                                    </Button>\n                                    <ActionIcon\n                                        onClick={() => {\n                                            deleteTask(index);\n                                        }}\n                                        color={'red'}\n                                        variant={'transparent'}\n                                    >\n                                        <Trash />\n                                    </ActionIcon>\n                                </Group>\n                            </Group>\n                            <Text color={'dimmed'} size={'md'} mt={'sm'}>\n                                {task.summary ? task.summary : 'No summary was provided for this task'}\n                            </Text>\n                        </Card>\n                                    );\n                                }\n                            })\n                        ) : (\n                            <Text size={'lg'} mt={'md'} color={'dimmed'}>\n                                You have no tasks\n                            </Text>\n                        )}\n                        <Button\n                            onClick={() => {\n                                setOpened(true);\n                            }}\n                            fullWidth\n                            mt={'md'}>\n                            New Task\n                        </Button>\n                    </Container>\n                </div>\n            </MantineProvider>\n        </ColorSchemeProvider>\n    );\n}\n\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}